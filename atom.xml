<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>px-blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pangxue.vip/"/>
  <updated>2020-04-02T14:02:56.965Z</updated>
  <id>http://pangxue.vip/</id>
  
  <author>
    <name>px</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springboot+security+JWT实现权限认证</title>
    <link href="http://pangxue.vip/2020/03/28/springboot+security+JWT/"/>
    <id>http://pangxue.vip/2020/03/28/springboot+security+JWT/</id>
    <published>2020-03-28T02:04:31.000Z</published>
    <updated>2020-04-02T14:02:56.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>　　<code>security</code>是企业级安全框架，可用于用户认证,实现前后分离权限注解，通过JWT登录认证</p><h2 id="2-教程"><a href="#2-教程" class="headerlink" title="2. 教程"></a>2. 教程</h2><p>   教程： <code>https://mp.weixin.qq.com/s/v6qUncrHI09S2s3GroTe7w</code></p><h2 id="3-注意点"><a href="#3-注意点" class="headerlink" title="3. 注意点"></a>3. 注意点</h2><p>　　1. jwt相关属性可配置在配置文件中<br>　　<img src="/springboot+security+JWT%E5%AE%9E%E7%8E%B0%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/20200402085116186.png" alt=""><br>　　2. jwt映射model需要注意下　　<br>　　<img src="/springboot+security+JWT%E5%AE%9E%E7%8E%B0%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/20200402085305188.png" alt=""><br>　　3. 注意下propertySource注解的 <code>factory = YamlPropertySourceFactory.class</code>,这个是专门为了yml配置文件注入</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1. 简介&quot;&gt;&lt;/a&gt;1. 简介&lt;/h2&gt;&lt;p&gt;　　&lt;code&gt;security&lt;/code&gt;是企业级安全框架，可用于用户认证,实现前后分离权限注解，通过JWT登录认证
      
    
    </summary>
    
    
      <category term="java" scheme="http://pangxue.vip/categories/java/"/>
    
    
      <category term="springboot" scheme="http://pangxue.vip/tags/springboot/"/>
    
      <category term="security" scheme="http://pangxue.vip/tags/security/"/>
    
      <category term="JWT" scheme="http://pangxue.vip/tags/JWT/"/>
    
      <category term="权限认证" scheme="http://pangxue.vip/tags/%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>swagger踩坑</title>
    <link href="http://pangxue.vip/2020/03/27/java-swagger/"/>
    <id>http://pangxue.vip/2020/03/27/java-swagger/</id>
    <published>2020-03-27T14:32:44.000Z</published>
    <updated>2020-04-02T10:32:55.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前情提要"><a href="#1-前情提要" class="headerlink" title="1. 前情提要"></a>1. 前情提要</h2><p>　　请按照以下地址配置：　<code>https://blog.csdn.net/weixin_33690963/article/details/92055964</code></p><h2 id="2-启动失败"><a href="#2-启动失败" class="headerlink" title="2. 启动失败"></a>2. 启动失败</h2><p>　　项目启动，注册bean失败，打包失败，由于项目使用了mp2，发现是model映射字段出问题了，开启驼峰自动映射之后一定要注意字段名字问题</p><h2 id="3-swagger首页空白"><a href="#3-swagger首页空白" class="headerlink" title="3. swagger首页空白"></a>3. swagger首页空白</h2><p>　　swagger访问页面空白，发开F12,发现swagger-ui.html页面404，由于项目使用了security，说明被拦截了，打开JWT配置文件添加以下设置<img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/swagger%E8%B8%A9%E5%9D%91/20200401113239647.png" alt=""></p><h2 id="3-页面404"><a href="#3-页面404" class="headerlink" title="3. 页面404"></a>3. 页面404</h2><p>　　参考：<code>https://blog.csdn.net/ljm_csdn/article/details/87615670</code>，一定是管理资源的 WebMvcConfiguration 在其他配置类里被占用了，我的事在 json 配置类里占用的<br>  <img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/swagger%E8%B8%A9%E5%9D%91/20200401113932793.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-前情提要&quot;&gt;&lt;a href=&quot;#1-前情提要&quot; class=&quot;headerlink&quot; title=&quot;1. 前情提要&quot;&gt;&lt;/a&gt;1. 前情提要&lt;/h2&gt;&lt;p&gt;　　请按照以下地址配置：　&lt;code&gt;https://blog.csdn.net/weixin_3369
      
    
    </summary>
    
    
      <category term="java" scheme="http://pangxue.vip/categories/java/"/>
    
    
      <category term="swagger" scheme="http://pangxue.vip/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>Hexo工具（三）</title>
    <link href="http://pangxue.vip/2020/03/27/HexoTools/"/>
    <id>http://pangxue.vip/2020/03/27/HexoTools/</id>
    <published>2020-03-27T00:59:16.000Z</published>
    <updated>2020-03-27T02:36:25.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-为什么使用HexoEditor"><a href="#1-为什么使用HexoEditor" class="headerlink" title="1. 为什么使用HexoEditor?"></a>1. 为什么使用HexoEditor?</h2><p>　　1.这个软件有腾讯云的存储桶，也就是oss，配置好文件后一键上传图片很方便。<br>　　2.可以直接新建post，不用频繁的输入命令，只需定义新建post模板即可<br>　　3.一边写一边可以预览，样式不对了可以及时调整</p><h2 id="2-下载与安装"><a href="#2-下载与安装" class="headerlink" title="2. 下载与安装"></a>2. 下载与安装</h2><p>　　链接: <a href="https://pan.baidu.com/s/1nmvkEE4kKeQ-9wIbX3hiGA" target="_blank" rel="noopener">https://pan.baidu.com/s/1nmvkEE4kKeQ-9wIbX3hiGA</a> 提取码: r6yx<br>  为什么不用最新版？最新版新建post没有标头</p><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h2><ol><li>创建腾讯云密钥<br><code>https://console.cloud.tencent.com/cam/capi</code><br>点击新建密钥即可</li><li>　　<img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/Hexo%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%89%EF%BC%89/20200327101542155.png" alt=""><ol><li>默认资源库：存放本地图片的地方，自定义</li><li>access key：腾讯云的API密钥管理的<code>SecretId</code></li><li>secret key：腾讯云的API密钥管理的<code>SecretKey</code></li><li>上述填对之后其他存储空间，域名会自动填写</li></ol></li></ol><hr><h2 id="4-上传图片"><a href="#4-上传图片" class="headerlink" title="4. 上传图片"></a>4. 上传图片</h2><p>右键编辑页面，点击 <code>上传 腾讯云</code>,会把全部文件上传到腾讯云</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-为什么使用HexoEditor&quot;&gt;&lt;a href=&quot;#1-为什么使用HexoEditor&quot; class=&quot;headerlink&quot; title=&quot;1. 为什么使用HexoEditor?&quot;&gt;&lt;/a&gt;1. 为什么使用HexoEditor?&lt;/h2&gt;&lt;p&gt;　　1.这个
      
    
    </summary>
    
    
      <category term="教程" scheme="http://pangxue.vip/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="HexoEditor" scheme="http://pangxue.vip/tags/HexoEditor/"/>
    
      <category term="ide" scheme="http://pangxue.vip/tags/ide/"/>
    
      <category term="hexo" scheme="http://pangxue.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo进阶（二）</title>
    <link href="http://pangxue.vip/2020/03/26/HexoAdvanced/"/>
    <id>http://pangxue.vip/2020/03/26/HexoAdvanced/</id>
    <published>2020-03-26T01:13:31.000Z</published>
    <updated>2020-03-27T02:40:01.385Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-hexo各文件介绍"><a href="#1-hexo各文件介绍" class="headerlink" title="1.hexo各文件介绍"></a>1.hexo各文件介绍</h2><p><img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/Hexo%E8%BF%9B%E9%98%B6%EF%BC%88%E4%BA%8C%EF%BC%89/20200326091621275.png" alt=""></p><h2 id="2-hexo主题推荐"><a href="#2-hexo主题推荐" class="headerlink" title="2.hexo主题推荐"></a>2.hexo主题推荐</h2><p>　　个人使用pure，推荐next，fan，human等，主题挑选网站：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a><br><a href="https://github.com/cofess/hexo-theme-pure" target="_blank" rel="noopener"><strong>pure下载以及安装</strong></a></p><h2 id="3-hexo主题配置"><a href="#3-hexo主题配置" class="headerlink" title="3.hexo主题配置"></a>3.hexo主题配置</h2><p>　　复制<code>theme/pure/_source/</code>文件夹到<code>blog path/source/</code> 目录下以便安装全部功能<br>hexo全局配置在根目录<code>_config.yml</code>里<br><code>theme: pure</code>,输入对应的主题名保存即可更换主题，每个主题的配置文件在根目录文件夹themes下，继续修改相关信息</p><h2 id="4-配置评论功能"><a href="#4-配置评论功能" class="headerlink" title="4.配置评论功能"></a>4.配置评论功能</h2><p>　　目前免服务器的有gitment（停止维护），gittalk（推荐）</p><h4 id="1-点我设置github授权地址"><a href="#1-点我设置github授权地址" class="headerlink" title="1. 点我设置github授权地址"></a>1. <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">点我设置github授权地址</a></h4><p>操作演示：<br><img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/Hexo%E8%BF%9B%E9%98%B6%EF%BC%88%E4%BA%8C%EF%BC%89/20200326062224994.png" alt=""><br>注册成功后记住 ClientID 和 ClientSecret，下一步用</p><h4 id="2-修改主题配置"><a href="#2-修改主题配置" class="headerlink" title="2. 修改主题配置"></a>2. 修改主题配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">comment:</span><br><span class="line">  type: gitalk  # 启用哪种评论系统</span><br><span class="line">  gitalk: # gitalk. https:&#x2F;&#x2F;gitalk.github.io&#x2F;</span><br><span class="line">    owner: #必须. GitHub repository 所有者，可以是个人或者组织。</span><br><span class="line">    admin: #必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span><br><span class="line">    repo:  comment #必须. GitHub repository.</span><br><span class="line">    ClientID:  #必须. GitHub Application Client ID.</span><br><span class="line">    ClientSecret:  #必须. GitHub Application Client Secret.</span><br></pre></td></tr></table></figure><h4 id="3-登陆github账户记录评论"><a href="#3-登陆github账户记录评论" class="headerlink" title="3. 登陆github账户记录评论"></a>3. 登陆github账户记录评论</h4><p><img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/Hexo%E8%BF%9B%E9%98%B6%EF%BC%88%E4%BA%8C%EF%BC%89/20200326063139811.png" alt=""><br>如果报错请自行百度，目前遇到 network error情况，为当前wifi问题</p><h4 id="4-更换正文字体大小"><a href="#4-更换正文字体大小" class="headerlink" title="4. 更换正文字体大小"></a>4. 更换正文字体大小</h4><p>　　通过 F12 发现正文文字是用<code>&lt;p&gt;</code> ，然后找了下文件夹，最后定位到<code>pure\source\css</code>文件夹下<code>style.css</code>中，往下拉定位到<code>&lt;p&gt;</code>标签<br><img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/Hexo%E8%BF%9B%E9%98%B6%EF%BC%88%E4%BA%8C%EF%BC%89/20200326083126033.png" alt="">加这么一行保存重启hexo</p><h4 id="5-搜索出现bug"><a href="#5-搜索出现bug" class="headerlink" title="5. 搜索出现bug"></a>5. 搜索出现bug</h4><p>　　搜索文章正常说明搜索功能是好使的，但是搜索标签等就出现问题了，发现跳到<code>https://yoursite.com/categories/%E6%95%99%E7%A8%8B/</code>,说明配置里一定有这个网站，于是全局搜索<code>yoursite</code>发现根目录配置url，修改成自己博客地址即可</p><h4 id="6-title是中地址栏转义问题"><a href="#6-title是中地址栏转义问题" class="headerlink" title="6. title是中地址栏转义问题"></a>6. title是中地址栏转义问题</h4><p>　　写博客的过程中出现过以下情况<br><img src="/20200325215108/20200327084001717.png" alt="">这样就很烦，看着也不规范，看了下结构是发现用的 .md 文件的 title 命名的,像这种模版化的规则一般都有配置的，于是着了下hexo配置文件，发现这么个东西<code>permalink: :year/:month/:day/:title/</code>,发现正好对上了，百度了下这个东西叫永久链接的配置，那这样就好办了，想到这个title只是一个定位标示，如果把定位标示变成数字或者字母不就好了，于是<code>scaffolds/post.md</code>里面修改默认新建post的模版，添加个字段<code>alias</code>，然后配置里面<code>permalink: :year/:month/:day/:alias/</code>，打完收工</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-hexo各文件介绍&quot;&gt;&lt;a href=&quot;#1-hexo各文件介绍&quot; class=&quot;headerlink&quot; title=&quot;1.hexo各文件介绍&quot;&gt;&lt;/a&gt;1.hexo各文件介绍&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://hexo-1258128768.c
      
    
    </summary>
    
    
      <category term="教程" scheme="http://pangxue.vip/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://pangxue.vip/tags/hexo/"/>
    
      <category term="主题" scheme="http://pangxue.vip/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Hexo安装（一）</title>
    <link href="http://pangxue.vip/2020/03/25/HexoInstallation/"/>
    <id>http://pangxue.vip/2020/03/25/HexoInstallation/</id>
    <published>2020-03-25T13:51:07.000Z</published>
    <updated>2020-03-27T02:39:41.616Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1. 安装hexo"></a>1. 安装hexo</h2><p>　　详细安装过程可参考<a href="https://blog.csdn.net/SR02020/article/details/104876531/" target="_blank" rel="noopener">安装教程</a></p><h3 id="1-1-安装-git"><a href="#1-1-安装-git" class="headerlink" title="1.1 安装 git"></a>1.1 <strong>安装 git</strong></h3><p>　　windows下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br>双击下载好的exe文件，一路next就好啦<br>git version 查看版本</p><h3 id="1-2-安装-nodejs"><a href="#1-2-安装-nodejs" class="headerlink" title="1.2 安装 nodejs"></a>1.2 安装 nodejs</h3><p>　　下载地址：<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">下载地址</a>　。双击打开安装，也是一路next，不过在Custom Setup这一步记得选 <code>Add to PATH</code> ,这样你就不用自己去配置电脑上环境变量了，装完在按 <code>win + r</code> 快捷键调出运行，然后输入cmd确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量）</p><p><a href="https://www.cnblogs.com/liuqiyun/p/8133904.html" target="_blank" rel="noopener">自定义插件安装位置可参考</a></p><ol><li>在<code>D:\work\nodejs</code>里新建2个文件夹<code>node_global</code>及<code>node_cache</code>,接下来打开命令行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\work\nodejs\npm_global&quot;</span><br><span class="line">npm config set cache &quot;D:\work\nodejs\npm_cache&quot;</span><br></pre></td></tr></table></figure></li><li>打开系统变量，新建<br><code>NODE_PATH</code><br><code>D:\work\nodejs\npm_global\node_modules</code></li><li>编辑用户变量中的path，<code>C: \Users\px\App Data\Roaming\npm</code>替换成<code>D:\work\nodejs\npm_global</code></li></ol><h3 id="1-3-配置npm"><a href="#1-3-配置npm" class="headerlink" title="1.3 配置npm"></a>1.3 配置npm</h3><p>　　在想要安装的目标文件夹下打开GitBash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https:&#x2F;&#x2F;registry.npm.taobao.org&#x2F;&quot;</span><br><span class="line">npm config set electron_mirror &quot;https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;electron&#x2F;&quot;</span><br><span class="line">npm i -g hexo</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="1-4-搭建gitHub项目"><a href="#1-4-搭建gitHub项目" class="headerlink" title="1.4 搭建gitHub项目"></a>1.4 搭建gitHub项目</h3><p>　　自行搭建ssh免密码push git项目，创建一个repo，名称为<code>yourname.github.io</code>, 其中yourname是你的github名称，生成项目的最终地址是<code>https://github.com/yourname/yourname.github.io.git</code>,hexo的外网访问环境是<code>https://yourname.github.io/</code></p><h3 id="1-5-将hexo上传到gitHub"><a href="#1-5-将hexo上传到gitHub" class="headerlink" title="1.5 将hexo上传到gitHub"></a>1.5 将hexo上传到gitHub</h3><p>　　用编辑器打开你的blog项目，修改<code>_config.yml</code>文件的一些配置(冒号之后都是有一个半角空格的)：</p><pre><code>deploy:   type: git  repo: git@github.com:YourName/YourbName.github.io.git   branch: masternpm install hexo-deployer-git --savehexo cleanhexo ghexo d</code></pre><p>如果出现以下错误：<br><img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/20200325215107/20200326085511338.png" alt=""><br>那么说明头部格式错误，请检查头部格式：<br><img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/20200325215107/20200326085904905.png" alt=""></p><h3 id="1-6-绑定个人域名"><a href="#1-6-绑定个人域名" class="headerlink" title="1.6 绑定个人域名"></a>1.6 绑定个人域名</h3><p>　　访问腾讯域名管理网站（域名自行购买）<code>https://console.cloud.tencent.com/domain</code><br>点 操作-&gt;解析-&gt;添加记录<br><img src="http://hexo-1258128768.cos.ap-beijing.myqcloud.com/20200325215107/20200326083113281.png" alt=""><br><strong>其中最重要的是ip解析，打开cmd，输入</strong> <code>ping yourname.github.io</code><strong>，把返回的ip地址填入，然后保存。<br>如果出现４０４是因为：<br>项目操作变化需要修改映射的ip地址，可能是github项目被修改了，或者github出现缓存了，刷新页面或者重新部署等等</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装hexo&quot;&gt;&lt;a href=&quot;#1-安装hexo&quot; class=&quot;headerlink&quot; title=&quot;1. 安装hexo&quot;&gt;&lt;/a&gt;1. 安装hexo&lt;/h2&gt;&lt;p&gt;　　详细安装过程可参考&lt;a href=&quot;https://blog.csdn.net/SR
      
    
    </summary>
    
    
      <category term="教程" scheme="http://pangxue.vip/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://pangxue.vip/tags/hexo/"/>
    
      <category term="教程" scheme="http://pangxue.vip/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
